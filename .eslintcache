[{"D:\\Projects\\frontend\\src\\index.js":"1","D:\\Projects\\frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\frontend\\src\\App.js":"3","D:\\Projects\\frontend\\src\\redux\\store.jsx":"4","D:\\Projects\\frontend\\src\\components\\auth\\ForgotPassword.jsx":"5","D:\\Projects\\frontend\\src\\components\\auth\\ActivationEmail.jsx":"6","D:\\Projects\\frontend\\src\\components\\auth\\login.jsx":"7","D:\\Projects\\frontend\\src\\components\\auth\\ResetPassword.jsx":"8","D:\\Projects\\frontend\\src\\components\\auth\\signup.jsx":"9","D:\\Projects\\frontend\\src\\views\\Checkout\\Checkout.jsx":"10","D:\\Projects\\frontend\\src\\components\\profile\\Profile.jsx":"11","D:\\Projects\\frontend\\src\\components\\utils\\NotFound\\NotFound.jsx":"12","D:\\Projects\\frontend\\src\\views\\ThankYou\\ThankYou.jsx":"13","D:\\Projects\\frontend\\src\\redux\\reducers\\index.jsx":"14","D:\\Projects\\frontend\\src\\containers\\HomePage\\index.jsx":"15","D:\\Projects\\frontend\\src\\components\\users\\customer\\index.jsx":"16","D:\\Projects\\frontend\\src\\components\\pageContainer\\index.jsx":"17","D:\\Projects\\frontend\\src\\components\\utils\\notification\\Notifivation.jsx":"18","D:\\Projects\\frontend\\src\\redux\\actions\\authAction.jsx":"19","D:\\Projects\\frontend\\src\\components\\Checkout\\BillingInfo.jsx":"20","D:\\Projects\\frontend\\src\\components\\utils\\validation\\Validation.jsx":"21","D:\\Projects\\frontend\\src\\components\\Checkout\\PaymentMethodSelect.jsx":"22","D:\\Projects\\frontend\\src\\components\\Checkout\\OrderSummery.jsx":"23","D:\\Projects\\frontend\\src\\redux\\reducers\\tokenReducer.jsx":"24","D:\\Projects\\frontend\\src\\redux\\reducers\\authReducer.jsx":"25","D:\\Projects\\frontend\\src\\redux\\reducers\\orderReducer.jsx":"26","D:\\Projects\\frontend\\src\\containers\\HomePage\\services.jsx":"27","D:\\Projects\\frontend\\src\\containers\\HomePage\\topSection.jsx":"28","D:\\Projects\\frontend\\src\\components\\footer\\index.jsx":"29","D:\\Projects\\frontend\\src\\components\\navbar\\index.jsx":"30","D:\\Projects\\frontend\\src\\graphql\\mutations\\Order.js":"31","D:\\Projects\\frontend\\src\\components\\responsive\\index.js":"32","D:\\Projects\\frontend\\src\\redux\\actions\\index.jsx":"33","D:\\Projects\\frontend\\src\\components\\Checkout\\BillingInfoPersonal.jsx":"34","D:\\Projects\\frontend\\src\\components\\Checkout\\CartItem.jsx":"35","D:\\Projects\\frontend\\src\\util\\uiComponents.jsx":"36","D:\\Projects\\frontend\\src\\components\\marginer\\index.jsx":"37","D:\\Projects\\frontend\\src\\components\\specialistAd\\index.jsx":"38","D:\\Projects\\frontend\\src\\components\\sideBar\\index.jsx":"39","D:\\Projects\\frontend\\src\\redux\\actions\\orderAction.jsx":"40","D:\\Projects\\frontend\\src\\components\\serviceCard\\index.jsx":"41","D:\\Projects\\frontend\\src\\components\\button\\index.jsx":"42","D:\\Projects\\frontend\\src\\components\\brandLogo\\index.jsx":"43"},{"size":583,"mtime":1618700345000,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1618700345000,"results":"46","hashOfConfig":"45"},{"size":2317,"mtime":1618759859000,"results":"47","hashOfConfig":"45"},{"size":1690,"mtime":1618761804000,"results":"48","hashOfConfig":"45"},{"size":3214,"mtime":1618700345000,"results":"49","hashOfConfig":"45"},{"size":1576,"mtime":1618700345000,"results":"50","hashOfConfig":"45"},{"size":6398,"mtime":1618700345000,"results":"51","hashOfConfig":"45"},{"size":3845,"mtime":1618700345000,"results":"52","hashOfConfig":"45"},{"size":7214,"mtime":1618700345000,"results":"53","hashOfConfig":"45"},{"size":1336,"mtime":1618762566000,"results":"54","hashOfConfig":"45"},{"size":14001,"mtime":1618700345000,"results":"55","hashOfConfig":"45"},{"size":153,"mtime":1618700345000,"results":"56","hashOfConfig":"45"},{"size":1368,"mtime":1618324869000,"results":"57","hashOfConfig":"45"},{"size":217,"mtime":1618758542000,"results":"58","hashOfConfig":"45"},{"size":2584,"mtime":1618700345000,"results":"59","hashOfConfig":"45"},{"size":639,"mtime":1618700345000,"results":"60","hashOfConfig":"45"},{"size":608,"mtime":1618700345000,"results":"61","hashOfConfig":"45"},{"size":561,"mtime":1618700345000,"results":"62","hashOfConfig":"45"},{"size":520,"mtime":1618700345000,"results":"63","hashOfConfig":"45"},{"size":589,"mtime":1618300507000,"results":"64","hashOfConfig":"45"},{"size":575,"mtime":1618700345000,"results":"65","hashOfConfig":"45"},{"size":3119,"mtime":1618321785000,"results":"66","hashOfConfig":"45"},{"size":8533,"mtime":1618763823000,"results":"67","hashOfConfig":"45"},{"size":285,"mtime":1618700345000,"results":"68","hashOfConfig":"45"},{"size":595,"mtime":1618700345000,"results":"69","hashOfConfig":"45"},{"size":518,"mtime":1618758542000,"results":"70","hashOfConfig":"45"},{"size":2407,"mtime":1618700345000,"results":"71","hashOfConfig":"45"},{"size":2782,"mtime":1618700345000,"results":"72","hashOfConfig":"45"},{"size":3531,"mtime":1618700345000,"results":"73","hashOfConfig":"45"},{"size":5862,"mtime":1618700345000,"results":"74","hashOfConfig":"45"},{"size":218,"mtime":1618650007000,"results":"75","hashOfConfig":"45"},{"size":94,"mtime":1618700345000,"results":"76","hashOfConfig":"45"},{"size":180,"mtime":1618758457000,"results":"77","hashOfConfig":"45"},{"size":6198,"mtime":1618760273000,"results":"78","hashOfConfig":"45"},{"size":1286,"mtime":1618322362000,"results":"79","hashOfConfig":"45"},{"size":242,"mtime":1618757162000,"results":"80","hashOfConfig":"45"},{"size":624,"mtime":1618700345000,"results":"81","hashOfConfig":"45"},{"size":2371,"mtime":1618700345000,"results":"82","hashOfConfig":"45"},{"size":4055,"mtime":1618700345000,"results":"83","hashOfConfig":"45"},{"size":220,"mtime":1618760273000,"results":"84","hashOfConfig":"45"},{"size":2521,"mtime":1618700345000,"results":"85","hashOfConfig":"45"},{"size":963,"mtime":1618700345000,"results":"86","hashOfConfig":"45"},{"size":1743,"mtime":1618700345000,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bia3if",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\frontend\\src\\index.js",[],"D:\\Projects\\frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\frontend\\src\\App.js",[],"D:\\Projects\\frontend\\src\\redux\\store.jsx",["182","183","184"],"import React from 'react';\nimport {applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers/';\nimport { Provider } from 'react-redux'\nimport {ApolloClient, ApolloProvider, HttpLink, InMemoryCache} from '@apollo/client';\nimport * as authLink from \"apollo-link\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst store = createStore( rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n// current error asign err and response\n\n// function configureStore (preloadedState) {\n//     let persistedState = {};\n//     const localStoreState = localStorage.getItem('rst'); //rx = redux Storage\n//     if (localStoreState) {\n//         persistedState = JSON.parse(localStoreState);\n//     }\n//\n//     const store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(thunkMiddleware))); //dev\n//\n//     store.subscribe(() => {\n//         localStorage.setItem('rst', JSON.stringify(store.getState()));\n//     });\n//     return store;\n// }\n\nconst DataProvider = ({children}) => {\n    // const store = configureStore();\n\n    const httpLink = new HttpLink({\n        // uri: GRAPHQL,\n        uri: \"http://localhost:5100/graphql\",\n        credentials: 'same-origin'\n    });\n\n    const apolloClient = new ApolloClient({\n        cache: new InMemoryCache(),\n        link: authLink.concat(httpLink),\n        connectToDevTools: true,\n    });\n\n    return (\n        <ApolloProvider client={apolloClient}>\n            <Provider store ={store}>\n                {children }\n            </Provider>\n        </ApolloProvider>\n    )\n}\n\nexport default DataProvider;\n","D:\\Projects\\frontend\\src\\components\\auth\\ForgotPassword.jsx",[],"D:\\Projects\\frontend\\src\\components\\auth\\ActivationEmail.jsx",[],"D:\\Projects\\frontend\\src\\components\\auth\\login.jsx",[],"D:\\Projects\\frontend\\src\\components\\auth\\ResetPassword.jsx",[],"D:\\Projects\\frontend\\src\\components\\auth\\signup.jsx",["185"],"import React, { useState } from \"react\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { useDispatch } from 'react-redux'\nimport { Link } from \"react-router-dom\";\nimport { Footer } from '../footer'\nimport { Navbar } from '../navbar'\nimport { InnerPageContainer, PageContainer } from '../pageContainer/index'\nimport { showErrMsg, showSuccessMsg } from '../utils/notification/Notifivation';\nimport { isEmpty, isEmail, isLength, isMatch } from '../utils/validation/Validation'\nimport \"./auth.css\";\n\nconst StyledLink = styled( Link )`\n  text-decoration: none;\n`;\n\nconst initialState = {\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    phonenumber: \"\",\n    email: '',\n    password: '',\n    cf_password: \"\",\n    err: '',\n    success: '',\n}\n\nexport function Signup ()\n{\n\n    const [ user, setUser ] = useState( initialState );\n    const { firstname, lastname, username, phonenumber, email, password, cf_password, err, success } = user;\n\n    const handleChangeInput = e =>\n    {\n        const { name, value } = e.target\n        setUser( { ...user, [ name ]: value, err: '', success: '' } )\n    }\n\n\n    const handleSubmit = async e =>\n    {\n        e.preventDefault();\n        if ( isEmpty( firstname ) || isEmpty( password ) )\n            return setUser( {\n                ...user,\n                err: \"Please fill in all fields.\",\n                success: \"\",\n            } );\n\n        if ( isEmpty( lastname ) || isEmpty( password ) )\n            return setUser( {\n                ...user,\n                err: \"Please fill in all fields.\",\n                success: \"\",\n            } );\n\n        if ( isEmpty( username ) || isEmpty( password ) )\n            return setUser( {\n                ...user,\n                err: \"Please fill in all fields.\",\n                success: \"\",\n            } );\n\n\n        if ( !isEmail( email ) )\n            return setUser( { ...user, err: \"Invalid emails.\", success: \"\" } );\n\n        if ( isLength( password ) )\n            return setUser( {\n                ...user,\n                err: \"Password must be at least 6 characters.\",\n                success: \"\",\n            } );\n\n        if ( !isMatch( password, cf_password ) )\n            return setUser( { ...user, err: \"Password did not match.\", success: \"\" } );\n        try\n        {\n            const res = await axios.post( \"/user/register\", {\n                firstname, lastname, username, phonenumber, email, password\n            } );\n\n            setUser( { ...user, err: \"\", success: res.data.msg } );\n\n        } catch ( err )\n        {\n            err.response.data.msg &&\n                setUser( { ...user, err: err.response.data.msg, success: '' } )\n        }\n    }\n\n\n    return (\n        <PageContainer>\n            <Navbar />\n            <InnerPageContainer>\n\n                <div className=\"login_page\">\n                    <h2>SignUp</h2>\n                    { err && showErrMsg( err ) }\n                    { success && showSuccessMsg( success ) }\n\n                    <form onSubmit={ handleSubmit }>\n                        <div>\n                            <label htmlFor=\"firstname\"> First Name</label>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Enter first name\"\n                                id=\"firstname\"\n                                value={ firstname }\n                                name=\"firstname\"\n                                onChange={ handleChangeInput }\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"lastname\"> Last Name</label>\n                            <input\n                                type=\"text\"\n                                placeholder=\" Enter last name\"\n                                id=\"lastname\"\n                                value={ lastname }\n                                name=\"lastname\"\n                                onChange={ handleChangeInput }\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"username\"> User Name</label>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Enter user name\"\n                                id=\"username\"\n                                value={ username }\n                                name=\"username\"\n                                onChange={ handleChangeInput }\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"phonenumber\"> Phone Number</label>\n                            <input\n                                type=\"text\"\n                                placeholder=\" Enter Phone Number\"\n                                id=\"phonenumber\"\n                                value={ phonenumber }\n                                name=\"phonenumber\"\n                                onChange={ handleChangeInput }\n                            />\n                        </div>\n\n\n                        <div>\n                            <label htmlFor=\"email\"> Email address</label>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Enter email address\"\n                                id=\"email\"\n                                value={ email }\n                                name=\"email\"\n                                onChange={ handleChangeInput }\n                            />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                type=\"password\"\n                                placeholder=\"Enter password\"\n                                id=\"password\"\n                                value={ password }\n                                name=\"password\"\n                                onChange={ handleChangeInput }\n                            />\n                        </div>\n                        <div>\n                            <label htmlFor=\"cf_password\">Confirm  Password</label>\n                            <input\n                                type=\"password\"\n                                placeholder=\"Confirm your password\"\n                                id=\"cf_password\"\n                                value={ cf_password }\n                                name=\"cf_password\"\n                                onChange={ handleChangeInput }\n                            />\n                        </div>\n\n                        <div className=\"row\">\n                            <button type=\"submit\"> SignUp</button>\n                        </div>\n                        <p>Already have account? <br />\n                            <StyledLink to=\"/customer/page/login\">\n                                Login\n                         </StyledLink>\n                        </p>\n                    </form>\n\n                </div>\n\n\n            </InnerPageContainer>\n            <Footer />\n        </PageContainer>\n    )\n}","D:\\Projects\\frontend\\src\\views\\Checkout\\Checkout.jsx",[],"D:\\Projects\\frontend\\src\\components\\profile\\Profile.jsx",["186","187","188","189","190"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled from \"styled-components\";\nimport { Footer } from '../footer';\nimport { Navbar } from '../navbar';\nimport { InnerPageContainer, PageContainer } from '../pageContainer';\nimport { isLength, isMatch } from '../utils/validation/Validation';\nimport { showErrMsg, showSuccessMsg } from '../utils/notification/Notifivation';\nimport \"./profile.css\";\n\nconst Button = styled.button`\n  border: none;\n  outline: none;\n  color: #fff;\n  padding: 6px 1em;\n  font-size: ${ ( { size } ) => ( size ? size + \"px\" : \"18px\" ) };\n  font-weight: 600;\n  border-radius: 5px;\n  background-color: #01bf71;\n  /* white-space: nowrap; */\n  cursor: pointer;\n  transition: all 200ms ease-in-out;\n\n  &:hover {\n    background-color: #21867a;\n    color: #010606;\n    transition: all 0.2s ease -in -out;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\n// const StyledLink = styled( Link )`\n//   text-decoration: none;\n// `;\n// const BackgroundFilter = styled.div`\n//  width: 100%;\n//  height: 100%;\n//  background-color: rgba(2, 46, 36, 0.9);\n//  display: flex;\n//  flex-direction: column;\n// `;\n\n// const ProfilePage = styled.div`\n// width: 100%;\n// display: flex;\n// flex-wrap: wrap;\n\n// `;\n\n// const ColumnLeft = styled.div`\n// max-width: 400px;\n// min-width: 300px;\n// padding: 0 10px;\n// margin: auto;\n\n// `;\n\n// const LeftH2 = styled.h2`\n// text-align: center;\n// font-size: 1.7rem;\n// text-transform: uppercase;\n// color: #333;\n// margin: 10px 0;\n\n// `;\n\n// const Avatar = styled.div`\n// width: 150px;\n// height: 150px;\n// overflow: hidden;\n// position: relative;\n// margin: 15px auto;\n// border: 1px solid #ddd;\n// border-radius: 50%;\n// cursor: pointer;\n// `;\n\n// const Img = styled.img`\n// width: 100%;\n// height: 100%;\n// display: block;\n// object-fit: cover;\n// `;\n\n// const Span = styled.span`\n//    position: absolute;\n//     bottom: -100%;\n//     left: 0;\n//     width: 100%;\n//     height: 50%;\n//     background: #fff8;\n//     text-align: center;\n//     font-weight: 400;\n//     text-transform: uppercase;\n//     color: rgb(255, 140, 45);\n//     transition: 0.3s ease-in-out;\n// `\n// const Uploader = styled.input`\n//     position: absolute;\n//     top:0;\n//     left: 0;\n//     width: 100%;\n//     height: 100%;\n//     cursor: pointer;\n//     opacity: 0;\n// `;\n\n// const Label = styled.label`\n//     display: block;\n//     margin-top: 5px;\n// `;\n\n// const Input = styled.input`\n//     width: 100%;\n//     height: 40px;\n//     margin: 5px 0;\n//     border: none;\n//     outline: none;\n//     background: #fee;\n//     padding: 0 5px;\n\n// `;\n\nconst initialState = {\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    phonenumber: \"\",\n    email: '',\n    password: '',\n    cf_password: \"\",\n    err: '',\n    success: '',\n}\n\nfunction Profile ()\n{\n    const auth = useSelector( state => state.auth )\n    const token = useSelector( state => state.token )\n\n    // const users = useSelector( state => state.users )\n\n    const { user, isAdmin } = auth\n    const [ data, setData ] = useState( initialState )\n    const { firstname, lastname, username, phonenumber, password, cf_password, err, success } = data\n\n    const [ avatar, setAvatar ] = useState( false )\n    const [ loading, setLoading ] = useState( false )\n    const [ callback, setCallback ] = useState( false )\n\n    // const dispatch = useDispatch()\n\n    // useEffect( () =>\n    // {\n    //     // if ( isAdmin )\n    //     // {\n    //     //     fetchAllUsers( token ).then( res =>\n    //     //     {\n    //     //         dispatch( dispatchGetAllUsers( res ) )\n    //     //     } )\n    //     // }\n    // }, [ token, isAdmin, dispatch, callback ] )\n\n    const handleChange = e =>\n    {\n        const { name, value } = e.target\n        setData( { ...data, [ name ]: value, err: '', success: '' } )\n    }\n\n    const changeAvatar = async ( e ) =>\n    {\n        e.preventDefault()\n        try\n        {\n            const file = e.target.files[ 0 ]\n\n            if ( !file ) return setData( { ...data, err: \"No files were uploaded.\", success: '' } )\n\n            if ( file.size > 1024 * 1024 )\n                return setData( { ...data, err: \"Size too large.\", success: '' } )\n\n            if ( file.type !== 'image/jpeg' && file.type !== 'image/png' )\n                return setData( { ...data, err: \"File format is incorrect.\", success: '' } )\n\n            let formData = new FormData()\n            formData.append( 'file', file )\n\n            setLoading( true )\n            const res = await axios.post( '/api/upload_avatar', formData, {\n                headers: { 'content-type': 'multipart/form-data', Authorization: token }\n            } )\n\n            setLoading( false )\n            setAvatar( res.data.url )\n\n        } catch ( err )\n        {\n            setData( { ...data, err: err.response.data.msg, success: '' } )\n        }\n    }\n\n    const updateInfor = () =>\n    {\n        try\n        {\n            axios.patch( '/user/update', {\n                firstname: firstname ? firstname : user.firstname,\n                lastname: lastname ? lastname : user.lastname,\n                username: username ? username : user.username,\n                phonenumber: phonenumber ? phonenumber : user.phonenumber,\n                avatar: avatar ? avatar : user.avatar\n            }, {\n                headers: { Authorization: token }\n            } )\n\n            setData( { ...data, err: '', success: \"Updated Success!\" } )\n        } catch ( err )\n        {\n            setData( { ...data, err: err.response.data.msg, success: '' } )\n        }\n    }\n\n    const updatePassword = () =>\n    {\n        if ( isLength( password ) )\n            return setData( { ...data, err: \"Password must be at least 6 characters.\", success: '' } )\n\n        if ( !isMatch( password, cf_password ) )\n            return setData( { ...data, err: \"Password did not match.\", success: '' } )\n\n        try\n        {\n            axios.post( '/user/reset', { password }, {\n                headers: { Authorization: token }\n            } )\n\n            setData( { ...data, err: '', success: \"Updated Success!\" } )\n        } catch ( err )\n        {\n            setData( { ...data, err: err.response.data.msg, success: '' } )\n        }\n    }\n\n    const handleUpdate = () =>\n    {\n        if ( firstname || lastname || username || phonenumber || avatar ) updateInfor()\n        if ( password ) updatePassword()\n    }\n\n    // const handleDelete = async ( id ) =>\n    // {\n    //     try\n    //     {\n    //         if ( user._id !== id )\n    //         {\n    //             if ( window.confirm( \"Are you sure you want to delete this account?\" ) )\n    //             {\n    //                 setLoading( true )\n    //                 await axios.delete( `/user/delete/${ id }`, {\n    //                     headers: { Authorization: token }\n    //                 } )\n    //                 setLoading( false )\n    //                 setCallback( !callback )\n    //             }\n    //         }\n\n    //     } catch ( err )\n    //     {\n    //         setData( { ...data, err: err.response.data.msg, success: '' } )\n    //     }\n    // }\n\n    return (\n        <PageContainer>\n            <Navbar />\n            <InnerPageContainer>\n                <>\n                   \n                    <div className=\"profile_page\">\n                      \n                          <div className=\"col-left\">\n                              <div>\n                            { err && showErrMsg( err ) }\n                            { success && showSuccessMsg( success ) }\n                            { loading && <h3>Loading.....</h3> }\n                            </div>\n                            <h2>{ isAdmin ? \"Admin Profile\" : \"User Profile\" }</h2>\n                            <div className=\"avatar\">\n                                <img src={ avatar ? avatar : user.avatar } alt=\"\" />\n                                <span>\n                                    <i className=\"fas fa-camera\"></i>\n                                    <p>Change</p>\n                                    <input type=\"file\" name=\"file\" id=\"file_up\" onChange={ changeAvatar } />\n                                </span>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"firstname\">First Name</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"firstname\"\n                                    id=\"firstname\"\n                                    defaultValue={ user.firstname }\n                                    placeholder=\"Your first name\"\n                                    onChange={ handleChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"lastname\">Last Name</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"lastname\"\n                                    id=\"lastname\"\n                                    defaultValue={ user.lastname }\n                                    placeholder=\"Your last name\"\n                                    onChange={ handleChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">User Name</label>\n                                <input t\n                                    ype=\"text\"\n                                    name=\"username\"\n                                    id=\"username\"\n                                    defaultValue={ user.username }\n                                    placeholder=\"Your user name\"\n                                    onChange={ handleChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"phonenumber\">Phone Number</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"phonenumber\"\n                                    id=\"phonenumber\"\n                                    defaultValue={ user.phonenumber }\n                                    placeholder=\"Your Phone Number\"\n                                    onChange={ handleChange }\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"email\"> Email address</label>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter email address\"\n                                    id=\"email\"\n                                    defaultValue={ user.email }\n                                    name=\"email\"\n                                    disabled\n\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">New Password</label>\n                                <input t\n                                    ype=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Your password\"\n                                    value={ password }\n                                    onChange={ handleChange }\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"cf_password\">Confirm New Password</label>\n                                <input\n                                    type=\"password\"\n                                    name=\"cf_password\"\n                                    id=\"cf_password\"\n                                    placeholder=\"Confirm password\"\n                                    value={ cf_password }\n                                    onChange={ handleChange }\n                                />\n                            </div>\n                            <div>\n                                <em style={ { color: \"crimson\" } }>\n                                    * If you update your password here, you will not be able\n                                    to login quickly using google and facebook.\n                             </em>\n                            </div>\n                            <Button disabled={ loading } onClick={ handleUpdate } >Update</Button>\n                        </div>\n\n\n                        <div className=\"col-right\">\n                            <h2>{ isAdmin ? \"Users\" : \"My Request\" }</h2>\n                            <div style={ { overflowX: \"auto\" } }>\n                                <table className=\"customers\">\n                                    <thead>\n                                        <tr>\n                                            <th>ID</th>\n                                            <th>User Name</th>\n                                            <th>Email</th>\n                                            <th>Admin</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                          \n                                    </tbody>\n                                </table>\n                            </div>\n\n                        </div>\n                    </div>\n                </>\n            </InnerPageContainer>\n            <Footer />\n        </PageContainer>\n    )\n}\n\nexport default Profile\n","D:\\Projects\\frontend\\src\\components\\utils\\NotFound\\NotFound.jsx",[],"D:\\Projects\\frontend\\src\\views\\ThankYou\\ThankYou.jsx",[],"D:\\Projects\\frontend\\src\\redux\\reducers\\index.jsx",[],"D:\\Projects\\frontend\\src\\containers\\HomePage\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\users\\customer\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\pageContainer\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\utils\\notification\\Notifivation.jsx",[],"D:\\Projects\\frontend\\src\\redux\\actions\\authAction.jsx",[],"D:\\Projects\\frontend\\src\\components\\Checkout\\BillingInfo.jsx",[],"D:\\Projects\\frontend\\src\\components\\utils\\validation\\Validation.jsx",[],"D:\\Projects\\frontend\\src\\components\\Checkout\\PaymentMethodSelect.jsx",[],"D:\\Projects\\frontend\\src\\components\\Checkout\\OrderSummery.jsx",["191","192","193"],"import React, {useState, useRef} from 'react';\nimport {Alert, Button, Card, Col, Container, Form, Row} from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport CartItem from \"./CartItem\";\nimport {smallCentsWithPrefix} from \"../../util/uiComponents\";\nimport {useMutation} from \"@apollo/client\";\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {SAVE_ORDER} from \"../../graphql/mutations/Order\";\n\nfunction OrderSummery() {\n    const orderState = useSelector((state) => state.order);\n\n    const [isProcessing, setIsProcessing] = useState(false);\n    //redirect to payment feedback without IPG payment\n    const [isRedirectToFeedback, setIsRedirectToFeedback] = useState(false);\n    const [initOrderData, setInitOrderData] = useState({\n        orderID: null, total: null, paymentType: null\n    });\n\n    const [createOrder, {data, loading, error}] = useMutation(SAVE_ORDER, {\n        onCompleted: async data => {\n            setTimeout(() => {\n                setIsProcessing(false);\n            }, 2000);\n\n            if (await isSuccessInit(data.createOrder)) {\n                // console.log(data.createOrder);\n                setIsRedirectToFeedback(true); //redirect to payment feedback without IPG (for testing purpose)\n                payNowRef.current.click(); // redirect to payment gateway\n            }\n        },\n\n        onError: ({graphQLErrors, networkError}) => {\n            setIsProcessing(false);\n\n            if (graphQLErrors)\n                graphQLErrors.map(({message, locations, path}) => {\n                        // console.log(message);\n                        alert(message);\n                    }\n                );\n\n            if (networkError) {\n                // console.log(`[Network error]: ${networkError}`);\n                alert('Network error. Try again later!');\n            }\n        }\n    });\n\n    /**\n     * if initBooking data is received, this will be called.\n     */\n    const isSuccessInit = async (orderData) => {\n        // console.log(orderData);\n\n        if (orderData._id && orderData.orderID && orderData.total) {\n            const initOrderData = {\n                orderID: orderData.orderID, total: orderData.total,\n                paymentType: orderData.paymentType\n            };\n\n            await setInitOrderData(initOrderData);\n            return true;\n        }\n\n        alert('Something went wrong! Try again later.');\n        return false;\n    };\n\n    const payNowRef = useRef();\n\n    const saveOrder = () => {\n        const orderData = {\n            user: \"607a8894484d5351fbb03e5e\",\n            billingInfo: orderState.userBillingInformation,\n            paymentMethod: 'card',\n            totalPaid: 5000,\n            // total: 5500\n        //     service: Service!\n        //     user: User!\n        //     orderID: Int\n        // totalPaid: Float\n        // paymentMethod: String\n        // cardPayment: CardPayment\n        };\n\n        createOrder({\n            variables: {\n                orderInput: orderData\n            }\n        });\n    };\n\n    const handleOnBookingButtonClick = async () => {\n        setIsProcessing(true);\n        saveOrder();\n    };\n\n    const paymentForm = () => {\n        const orderID = initOrderData.orderID ? initOrderData.orderID : '';\n        const orderTotal = initOrderData.total ? parseFloat((initOrderData.total).toFixed(2)) : 0;\n\n        const billingAddress = orderState.userBillingInformation;\n        let firstName = '', lastName = '', address = '', city = '', tel = '', userEmail = '';\n\n        if (billingAddress) {\n            // fullName = billingAddress.fullName ? billingAddress.fullName : '';\n            firstName = billingAddress.fullName ? billingAddress.fullName.split(' ')[0] : '';\n            lastName = billingAddress.fullName ? billingAddress.fullName.split(' ').length > 1 ? billingAddress.fullName.split(' ')[1] : '' : '';\n            address = billingAddress.address ? billingAddress.address : '';\n            city = billingAddress.city ? billingAddress.city : '';\n            tel = billingAddress.tel ? billingAddress.tel : '';\n        }\n\n        return (\n            <form method=\"post\" action=\"https://sandbox.payhere.lk/pay/checkout\">\n                <input type=\"hidden\" name=\"merchant_id\" value=\"1217101\"/>\n                <input type=\"hidden\" name=\"return_url\" value=\"http://localhost:3000/payment-feedback\"/>\n                <input type=\"hidden\" name=\"cancel_url\" value=\"http://localhost:3000/checkout\"/>\n                <input type=\"hidden\" name=\"notify_url\" value=\"http://localhost:5100/payhere-notify\"/>\n                <input type=\"hidden\" name=\"order_id\" value={orderID}/>\n                <input type=\"hidden\" name=\"items\" value=\"on Call system\"/>\n                <input type=\"hidden\" name=\"currency\" value=\"LKR\"/>\n                <input type=\"hidden\" name=\"amount\" value={orderTotal}/>\n                <input type=\"hidden\" name=\"first_name\" value={firstName}/>\n                <input type=\"hidden\" name=\"last_name\" value={lastName}/>\n                <input type=\"hidden\" name=\"email\" value={userEmail}/>\n                <input type=\"hidden\" name=\"phone\" value={tel}/>\n                <input type=\"hidden\" name=\"address\" value={address}/>\n                <input type=\"hidden\" name=\"city\" value={city}/>\n                <input type=\"hidden\" name=\"country\" value=\"Sri Lanka\"/>\n\n                <Button ref={payNowRef} className='dis-none' type={\"submit\"}>Paynow</Button>\n            </form>\n        );\n    };\n\n    const redirectWithoutPaymentForTesting = () => {\n        return <Redirect to={'/thankyou?order_id=' + initOrderData.orderID}/>;\n    };\n\n    return (\n        <div className='order-summery mb-4'>\n            <Card className='order-summery-card'>\n                <Card.Header>\n                    Order Summery\n                </Card.Header>\n                <Card.Body>\n                    <CartItem/>\n\n                    <hr/>\n                    <Container>\n                        <Row>\n                            <Col xs={6} sm={6} md={6} lg={6} className='pl-0'>\n                                <p className='total-amount-text'>Total Amount</p>\n                            </Col>\n                            <Col xs={6} sm={6} md={6} lg={6} className='item-price-total text-right pr-0'>\n                                <label>\n                                    <NumberFormat value={88888.99} thousandSeparator={true}\n                                                  displayType='text'\n                                                  prefix={'LKR '}\n                                                  decimalScale={2} fixedDecimalScale={true}\n                                                  renderText={smallCentsWithPrefix}\n                                    /> <br/>\n                                </label>\n                            </Col>\n                        </Row>\n                    </Container>\n\n                    <div className='terms-text mb-3'>\n                        <Form.Check type='checkbox'>\n                            <Form.Check.Input type='checkbox' id='order-agreement'\n                            />\n                            <Form.Check.Label htmlFor='order-agreement'>\n                                By completing your purchase you agree to these <a href='#'>Terms of\n                                Service</a></Form.Check.Label>\n                        </Form.Check>\n                    </div>\n\n                    <React.Fragment>\n                        {isRedirectToFeedback && redirectWithoutPaymentForTesting()}\n\n                        <Button\n                            variant='success'\n                            className='order-btn float-right'\n                            onClick={handleOnBookingButtonClick}\n                            disabled={isProcessing}\n                        >\n                            Order\n                        </Button>\n\n                        {paymentForm()}\n                    </React.Fragment>\n\n                    {(data && data.createOrder._id) &&\n                    <Alert variant={\"success\"}>\n                        You are redirecting to secure payment method.\n                    </Alert>\n                    }\n\n                    {error &&\n                    <Alert variant={\"danger\"}>\n                        An error occurred, please try again later\n                    </Alert>\n                    }\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default OrderSummery;\n","D:\\Projects\\frontend\\src\\redux\\reducers\\tokenReducer.jsx",[],"D:\\Projects\\frontend\\src\\redux\\reducers\\authReducer.jsx",[],"D:\\Projects\\frontend\\src\\redux\\reducers\\orderReducer.jsx",[],"D:\\Projects\\frontend\\src\\containers\\HomePage\\services.jsx",[],"D:\\Projects\\frontend\\src\\containers\\HomePage\\topSection.jsx",[],"D:\\Projects\\frontend\\src\\components\\footer\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\navbar\\index.jsx",[],"D:\\Projects\\frontend\\src\\graphql\\mutations\\Order.js",[],"D:\\Projects\\frontend\\src\\components\\responsive\\index.js",[],"D:\\Projects\\frontend\\src\\redux\\actions\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\Checkout\\BillingInfoPersonal.jsx",["194"],"import React, {useEffect, useState} from 'react';\nimport {Col, Form, InputGroup} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setBillingDetails} from \"../../redux/actions/orderAction\";\n\nfunction BillingInfoPersonal() {\n\n    const personalDetailsInStore = useSelector((state) => state.order.userBillingInformation);\n\n    const dispatch = useDispatch();\n\n    const [fullName, setFullName] = useState('');\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [postalCode, setPostcode] = useState('');\n    const [tel, setTel] = useState('');\n\n    useEffect(() => {\n        personalDetails = personalDetailsInStore ? personalDetailsInStore : personalDetails;\n\n        (fullName !== personalDetails.fullName && personalDetails.fullName) && setFullName(personalDetails.fullName);\n        (address !== personalDetails.address && personalDetails.address) && setAddress(personalDetails.address);\n        (city !== personalDetails.city && personalDetails.city) && setCity(personalDetails.city);\n        (postalCode !== personalDetails.postalCode && personalDetails.postalCode) && setPostcode(personalDetails.postalCode);\n        (tel !== personalDetails.tel && personalDetails.tel) && setTel(personalDetails.tel);\n    });\n\n    let personalDetails = {\n        fullName: null,\n        address: null,\n        city: null,\n        postalCode: null,\n        tel: null,\n    };\n\n    const handleChangeFullName = (fullName) => {\n        dispatch(setBillingDetails({...personalDetails, fullName}))\n    }\n\n    const handleChangeAddress = (address) => {\n        dispatch(setBillingDetails({...personalDetails, address}))\n    }\n\n    const handleChangeCity = (city) => {\n        dispatch(setBillingDetails({...personalDetails, city}))\n    }\n\n    const handleChangePostCode = (postalCode) => {\n        dispatch(setBillingDetails({...personalDetails, postalCode}))\n    }\n\n    const handleChangeTel = (tel) => {\n        dispatch(setBillingDetails({...personalDetails, tel}))\n    }\n\n    return (\n        <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCustomFullName\">\n                <Form.Label>Full Name*</Form.Label>\n                <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Your Full Name\"\n                    onChange={(e => handleChangeFullName(e.target.value))}\n                    defaultValue={fullName}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please provide your full name\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCustomAddress\">\n                <Form.Label>Address*</Form.Label>\n                <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Street Address\"\n                    onChange={(e => handleChangeAddress(e.target.value))}\n                    defaultValue={address}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please provide your address\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"4\" controlId=\"validationCustomCity\">\n                <Form.Label>City / suburb*</Form.Label>\n                <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"City / suburb\"\n                    onChange={(e => handleChangeCity(e.target.value))}\n                    defaultValue={city}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please provide city / suburb\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"4\" controlId=\"validationCustomPostCode\">\n                <Form.Label>Postal Code*</Form.Label>\n                <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Postal Code\"\n                    onChange={(e => handleChangePostCode(e.target.value))}\n                    defaultValue={postalCode}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please provide post code\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCustomPhone\">\n                <Form.Label>Contact Number*</Form.Label>\n\n                <InputGroup>\n                    <InputGroup.Prepend>\n                        {/*<InputGroup.Text id=\"basic-addon1\">*/}\n                        {/*    <div className='flag'>*/}\n                        {/*        /!*<ReactCountryFlag countryCode=\"LK\" svg*!/*/}\n                        {/*        <ReactCountryFlag countryCode={countryCode} svg*/}\n                        {/*                          style={{*/}\n                        {/*                              fontSize: '1.2em',*/}\n                        {/*                              lineHeight: '1em',*/}\n                        {/*                              width: '2.5em',*/}\n                        {/*                              height: '.8em',*/}\n                        {/*                          }}*/}\n                        {/*                          aria-label=\"Sri Lanka\"/>*/}\n                        {/*    </div>*/}\n                        {/*    {callingCode}*/}\n                        {/*</InputGroup.Text>*/}\n                    </InputGroup.Prepend>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"0777 123 456\"\n                        className='prepended-control'\n                        onChange={(e => handleChangeTel(e.target.value))}\n                        defaultValue={tel}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide phone number\n                    </Form.Control.Feedback>\n                </InputGroup>\n\n            </Form.Group>\n\n        </Form.Row>\n    )\n\n}\n\nexport default BillingInfoPersonal;\n","D:\\Projects\\frontend\\src\\components\\Checkout\\CartItem.jsx",["195"],"import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport {FaRegTrashAlt} from 'react-icons/fa'\nimport {smallCentsWithPrefix} from \"../../util/uiComponents\";\n\nfunction CartItem() {\n    return (\n        <Container>\n            <Row>\n                <Col xs={7} sm={7} md={8} lg={8} className='pl-0 pr-0'>\n                    <Row>\n                        <Col xs={12}><p className='cart-item-text'>I will paint your car from top to bottom</p></Col>\n                    </Row>\n                </Col>\n                <Col xs={5} sm={5} md={4} lg={4} className='item-price pr-0 text-right'>\n                    <label>\n                        <NumberFormat value={4444.44} thousandSeparator={true}\n                                      displayType='text'\n                                      prefix={'LKR '}\n                                      decimalScale={2} fixedDecimalScale={true}\n                                      renderText={smallCentsWithPrefix}\n                        />\n                    </label>\n\n                    <FaRegTrashAlt fontSize={10} cursor='pointer' color='#757575'/>\n                </Col>\n            </Row>\n        </Container>\n    )\n\n}\n\nexport default CartItem;\n","D:\\Projects\\frontend\\src\\util\\uiComponents.jsx",[],"D:\\Projects\\frontend\\src\\components\\marginer\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\specialistAd\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\sideBar\\index.jsx",[],"D:\\Projects\\frontend\\src\\redux\\actions\\orderAction.jsx",["196"],"import ACTIONS from './index';\n\nexport const setBillingDetails = (billingDetails) => {\n    {\n        return {\n            type: ACTIONS.SET_USER_BILLING_INFORMATION,\n            payload: billingDetails\n        }\n    }\n}\n","D:\\Projects\\frontend\\src\\components\\serviceCard\\index.jsx",["197"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Marginer } from \"../marginer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  width: 300px;\n  min-height: 250px;\n  background-color: #fff;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.4);\n  margin: 0.5em;\n  margin-bottom: 1.3em;\n`;\n\nconst TopContainer = styled.div`\n  width: 100%;\n`;\n\nconst ServiceThumbnail = styled.div`\n  width: 100%;\n  height: 11em;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  flex: 1;\n  padding: 15px 14px;\n`;\n\nconst BottomContainer = styled.div`\n  width: 100%;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid rgba(15, 15, 15, 0.19);\n  padding: 0 10px;\n`;\n\nconst Title = styled.h2`\n  font-size: 18px;\n  margin: 0;\n  font-weight: 500;\n  color: #000;\n  text-align: start;\n`;\n\nconst SpecialistName = styled.h4`\n  margin: 0;\n  color: rgba(151, 151, 151, 1);\n  font-size: 12px;\n  font-weight: 400;\n`;\n\nconst RatingContainer = styled.div`\n  display: flex;\n  color: #ebe204;\n`;\n\nconst PriceContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PriceText = styled.div`\n  margin-left: 3px;\n  color: #2ba679;\n  font-weight: 700;\n`;\n\nconst StartingAtText = styled.h6`\n  margin: 0;\n  color: rgb(161, 161, 161);\n  font-weight: 400;\n`;\n\nexport function ServiceCard ( props )\n{\n  const { thumbnailUrl, specialist, id, title, rate, rating } = props;\n\n  return (\n    <CardContainer>\n      <TopContainer>\n        <ServiceThumbnail>\n          {/* SEO purposes alt is given title */ }\n          <img src={ thumbnailUrl } alt={ title } />\n        </ServiceThumbnail>\n      </TopContainer>\n      <ContentContainer>\n        <Title>{ title }</Title>\n        <Marginer direction=\"vertical\" margin={ 10 } />\n        <SpecialistName>{ specialist.fullName }</SpecialistName>\n      </ContentContainer>\n      <BottomContainer>\n        <RatingContainer>\n          <FontAwesomeIcon icon={ faStar } size=\"sm\" />\n          { rating }\n        </RatingContainer>\n        <PriceContainer>\n          <StartingAtText>STARTING AT</StartingAtText>\n          <PriceText>LKR{ rate }/hr</PriceText>\n        </PriceContainer>\n      </BottomContainer>\n    </CardContainer>\n  );\n}\n","D:\\Projects\\frontend\\src\\components\\button\\index.jsx",[],"D:\\Projects\\frontend\\src\\components\\brandLogo\\index.jsx",[],{"ruleId":"198","severity":1,"message":"199","line":2,"column":9,"nodeType":"200","messageId":"201","endLine":2,"endColumn":24},{"ruleId":"198","severity":1,"message":"202","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":23},{"ruleId":"198","severity":1,"message":"203","line":8,"column":9,"nodeType":"200","messageId":"201","endLine":8,"endColumn":28},{"ruleId":"198","severity":1,"message":"204","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":21},{"ruleId":"198","severity":1,"message":"205","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"204","line":3,"column":23,"nodeType":"200","messageId":"201","endLine":3,"endColumn":34},{"ruleId":"198","severity":1,"message":"206","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"207","line":154,"column":13,"nodeType":"200","messageId":"201","endLine":154,"endColumn":21},{"ruleId":"198","severity":1,"message":"208","line":154,"column":23,"nodeType":"200","messageId":"201","endLine":154,"endColumn":34},{"ruleId":"198","severity":1,"message":"209","line":21,"column":32,"nodeType":"200","messageId":"201","endLine":21,"endColumn":39},{"ruleId":"210","severity":1,"message":"211","line":38,"column":64,"nodeType":"212","messageId":"213","endLine":38,"endColumn":66},{"ruleId":"214","severity":1,"message":"215","line":176,"column":80,"nodeType":"216","endLine":176,"endColumn":92},{"ruleId":"217","severity":1,"message":"218","line":19,"column":27,"nodeType":"219","endLine":19,"endColumn":92},{"ruleId":"198","severity":1,"message":"220","line":1,"column":16,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":4,"column":5,"nodeType":"223","messageId":"224","endLine":9,"endColumn":6},{"ruleId":"198","severity":1,"message":"225","line":91,"column":37,"nodeType":"200","messageId":"201","endLine":91,"endColumn":39},"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'thunkMiddleware' is defined but never used.","'composeWithDevTools' is defined but never used.","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'callback' is assigned a value but never used.","'setCallback' is assigned a value but never used.","'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","Assignments to the 'personalDetails' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","'Component' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'id' is assigned a value but never used."]